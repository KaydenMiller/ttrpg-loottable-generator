// <auto-generated />
using System.Collections.Generic;
using KaydenMiller.TableTop.LootTableGenerator.Domain.Common.ValueObjects.Identifiers;
using KaydenMiller.TableTop.LootTableGenerator.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KaydenMiller.TableTop.LootTableGenerator.Infrastructure.Migrations
{
    [DbContext(typeof(LootTableGeneratorDbContext))]
    partial class LootTableGeneratorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KaydenMiller.TableTop.LootTableGenerator.Domain.DescriptorAggregate.Descriptor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<HashSet<LootId>>("_availableLootIds")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("AvailableLootIds");

                    b.Property<HashSet<ModifierId>>("_modifierIds")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("ModifierIds");

                    b.HasKey("Id");

                    b.ToTable("Descriptors");
                });

            modelBuilder.Entity("KaydenMiller.TableTop.LootTableGenerator.Domain.EquipmentAggregate.Equipment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("KaydenMiller.TableTop.LootTableGenerator.Domain.LootAggregate.Loot", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<List<string>>("_assignedTags")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("AssignedTags");

                    b.Property<string>("_equipmentId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("EquipmentId");

                    b.Property<int>("_maxQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("MaxQuantity");

                    b.Property<int>("_minQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("MinQuantity");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<float>("_rarity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0.5f)
                        .HasColumnName("RarityPercentage");

                    b.HasKey("Id");

                    b.ToTable("Loot");
                });

            modelBuilder.Entity("KaydenMiller.TableTop.LootTableGenerator.Domain.LootTableAggregate.LootTable", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<List<DescriptorId>>("_descriptorIds")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("DescriptorIds");

                    b.Property<List<ModifierId>>("_modifierIds")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("ModifierIds");

                    b.HasKey("Id");

                    b.ToTable("LootTables");
                });

            modelBuilder.Entity("KaydenMiller.TableTop.LootTableGenerator.Domain.ModifierAggregate.Modifier", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("_maxQuantityModifier")
                        .HasColumnType("integer")
                        .HasColumnName("MaxQuantityModifier");

                    b.Property<int>("_minQuantityModifier")
                        .HasColumnType("integer")
                        .HasColumnName("MinQuantityModifier");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<float>("_quantityMultiplier")
                        .HasColumnType("real")
                        .HasColumnName("QuantityMultiplier");

                    b.HasKey("Id");

                    b.ToTable("Modifiers");
                });
#pragma warning restore 612, 618
        }
    }
}
